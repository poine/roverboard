<?xml version="1.0"?>
<launch>
  <arg name="robot_name" default="caroline_pi" />

  <arg name="start_base_control" default="true" />
  <arg name="start_description" default="true" />
  <arg name="start_teleop" default="true" />
  <arg name="start_lidar" default="true" />
  <arg name="start_cartographer" default="true" />
 
  <!-- ****** Starts hardware ****** -->
  <include file="$(find roverboard_control)/launch/hardware.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="odrive_interface_type" default="0" />     <!-- 0->ASCII, 1->CAN -->
    <arg name="hardware_interface_dt" default="0.02" />
  </include>
  
  <!-- <node pkg="roverboard_odrive" type="test_odrive_ascii.py" name="odrive_node" /> -->
  
  <!--  ****** Starts base control (joint publisher, diff drive controller) ****** -->
  <group if="$(arg start_base_control)">
    <include file="$(find roverboard_control)/launch/base_control.launch">
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>
  </group>
  
  <!-- ****** Starts description ****** -->
  <group if="$(arg start_description)">
    <include file="$(find roverboard_description)/launch/description.launch">
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>
  </group>

  <!-- ****** Starts a teleop node ****** -->
  <group if="$(arg start_teleop)">
    <include file="$(find roverboard_control)/launch/teleop.launch">
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>
  </group>

  
   <!-- ****** Starts lidar ****** -->
   <group if="$(arg start_lidar)">	
     <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
       <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
       <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
       <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
       <param name="frame_id"            type="string" value="hokuyo_link"/>
       <param name="inverted"            type="bool"   value="false"/>
       <param name="angle_compensate"    type="bool"   value="true"/>
     </node>
   </group>	



    <!--  ****** cartographer *****  -->
  <group if="$(arg start_cartographer)">


    <!-- cartographer_node -->
    <arg name="configuration_basename" default="caroline_lsd_2d.lua"/>
    <node pkg="cartographer_ros" type="cartographer_node" name="cartographer_node" 
          args="-configuration_directory $(find roverboard_caroline)/config
                -configuration_basename $(arg configuration_basename)"
          output="screen">
      <remap from="/odom" to="/caroline_pi_robot_hardware/diff_drive_controller/odom"/>
      <!-- <remap from="/scan" to="/caroline/laserscan"/> -->
    </node>


    <!-- cartographer_occupancy_grid_node -->
    <node pkg="cartographer_ros" type="cartographer_occupancy_grid_node"
          name="cartographer_occupancy_grid_node" 
          args="-resolution 0.05" />
    
  </group>
   
</launch>
