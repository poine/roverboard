<?xml version="1.0"?>
<launch>
  <arg name="robot_name" default="christine" />
  <arg name="start_base_control" default="true" />
  <arg name="start_description" default="true" />
  <arg name="start_camera" default="true" />

<!--  <arg name="trr_config" default="vedrines" />-->
  <arg name="trr_config" default="zroom" />
  
  <arg name="start_trr_lane_detect" default="true" />
  <arg name="start_trr_start_finish" default="true" />
  <arg name="start_trr_guidance" default="true" />
  <arg name="start_trr_state_estimation" default="true" />
  <arg name="start_trr_race_manager" default="true" />
  <arg name="start_teleop" default="false" />
  
  <!-- ****** Starts hardware ****** -->
  <include file="$(find roverboard_christine)/launch/hardware.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!--  ****** Starts base control (joint publisher, ackermann controller) ****** -->
  <group if="$(arg start_base_control)">
    <include file="$(find oscar_control)/launch/control.launch">
      <arg name="config" value="christine_v0" />
    </include>
  </group>
  
  <!-- ****** Starts description ****** -->
  <group if="$(arg start_description)">
    <include file="$(find oscar_description)/launch/description.launch">
      <arg name="config" value="christine_v0" />
    </include>
  </group>

  <!-- ****** Starts camera ****** -->
  <group if="$(arg start_camera)">
    <include file="$(find roverboard_christine)/launch/camera_road_front.launch">
    </include>
  </group>

  <!--  ****** Load configuration *****  -->
  <!-- load parameters in the parameter server --> 
  <rosparam command="load" file="$(find roverboard_christine)/config/trr_$(arg trr_config).yaml" />

  <!--  ****** Lane detection *****  -->
  <group if="$(arg start_trr_lane_detect)">
    <node name="trr_vision_lane_node" pkg="two_d_guidance" type="trr_vision_lane_node.py">
      <param name="robot_name" value="$(arg robot_name)" />
      <param name="cameras" value="camera_road_front"/>
      <param name="ref_frame" value="base_link_footprint"/>
      <!--<param name="mask_threshold" value="115"/>-->
    </node>
  </group>

  <!--  ****** Start Finish detection *****  -->
  <group if="$(arg start_trr_start_finish)">
    <node name="trr_vision_start_finish_node" pkg="two_d_guidance" type="trr_vision_start_finish_node.py" output="screen">
      <param name="robot_name" value="$(arg robot_name)" />
      <param name="cameras"    value="camera_road_front"/>
      <param name="ref_frame"  value="base_link_footprint"/>
      <!-- takes precedence over the values in the yaml config file --> 
      <!--<param name="roi_yt"  value="81"/> -->
      <!--<param name="r_hc"  value="122"/> -->
    </node>
  </group>
  
  <!--  ****** Race Manager *****  -->
  <group if="$(arg start_trr_race_manager)">
    <node name="trr_race_manager_node" pkg="trr" type="race_manager.py">
    </node>
  </group>
  
  <!--  ****** Guidance *****  -->
  <group if="$(arg start_trr_guidance)">
    <node name="trr_guidance_node" pkg="two_d_guidance" type="trr_guidance_node.py" output="screen">
      <param name="ref_frame" value="base_link_footprint"/>
      <param name="cmd_topic" value="/oscar_ackermann_controller/cmd_vel"/>
      <!-- <param name="guidance_mode" value="0"/> -->
      <!-- <param name="vel_sp" value="0.06"/> -->
      <!-- <param name="lookahead" value="0.6"/> -->
    </node>
  </group>

  <!--  ****** State Estimation *****  -->
  <group if="$(arg start_trr_state_estimation)">
    <node name="trr_state_estimator_node" pkg="two_d_guidance" type="trr_state_estimator.py" output="screen">
      <remap from="/odom" to="/oscar_ackermann_controller/odom"/>
      <param name="k_odom" value="1."/>
    </node>
  </group>
    
  <!-- ****** Starts a teleop node ****** -->
  <group if="$(arg start_teleop)">
    <include file="$(find oscar_control)/launch/teleop.launch">
      <arg name="use_ack" value="true" />
      <arg name="use_twist" value="false" />
    </include>
  </group>
  
</launch>
